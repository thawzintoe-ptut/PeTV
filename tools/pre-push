#!/bin/bash
remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
  # Handle delete
  if [[ "$local_sha" = "$z40" ]]; then
    echo "$local_ref, $remote_ref"
    :
  # Move along if we don't match refs/for/
  elif [[ ! "$remote_ref" =~ ^refs/for/.+ ]]; then
    echo "$local_ref, $remote_ref"
    :
  else
    echo "$local_ref, $local_sha, $remote_ref, $remote_sha"
    if [[ "$remote_sha" = "$z40" ]]; then
      # New branch, examine all commits
      branchname="${remote_ref#refs/for/}"

      if [[ "$branchname" =~ % ]]; then
        # Gerrit allows various push-options by appending them to the remote
        # using "%<option>=<string>[,<option>=<string>...]". Strip this off.
        # TODO: '%' is a valid character in branch names, so this could mangle
        # the branch name. We should find a way to workaround that.
        echo "NOTE: stripping Gerrit push-options beginning at '%'"
        branchname=${branchname%%\%*}
      fi

      if git check-ref-format --allow-onelevel "$branchname"; then
        range="${remote}/${branchname}..$local_sha"
      fi

      if [[ -z "$range" ]]; then
        range="$local_sha"
      fi
    else
      # Update to existing branch, examine new commits
      range="$remote_sha..$local_sha"
    fi

    echo "Examining $range"

    # Check for WIP/stash commit
    commit=`git rev-list -n 1 -i --grep '^WIP' --grep '^stash' "$range"`
    if [[ -n "$commit" ]]; then
      echo >&2 "Found WIP/stash commit in $local_ref, not pushing ($commit)"
      exit 1
    fi

    # At least one ref is going to Gerrit, so we should run additional checks
    run_checks=true
  fi
done

if [[ -n "$run_checks" ]]; then
  # pre-push usually executes in the repository root, but just to be safe...
  cd "$(git rev-parse --show-toplevel)"
  ./gradlew --init-script gradle/init.gradle.kts --no-configuration-cache check
  exit $?
fi

exit 0
